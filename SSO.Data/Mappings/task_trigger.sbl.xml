<?xml version="1.0" encoding="utf-8" ?>
<sql>
  <insert>
    INSERT INTO TaskTrigger (
    [Crons],
    [Description],
    [Description1]
    <isNotEmpty property="Activate" prepend=",">
      [Activate]
    </isNotEmpty>
    <isNotEmpty property="Expire" prepend=",">
      [Expire]
    </isNotEmpty>
    <isNotEmpty property="CreateTime" prepend=",">
      [CreateTime]
    </isNotEmpty>
    ) VALUES (
    @Crons,
    @Description,
    @Description1
    <isNotEmpty property="Activate" prepend=",">
      @Activate
    </isNotEmpty>
    <isNotEmpty property="Expire" prepend=",">
      @Expire
    </isNotEmpty>
    <isNotEmpty property="CreateTime" prepend=",">
      @CreateTime
    </isNotEmpty>
    )
  </insert>
  <update>
    UPDATE TaskTrigger SET
    Crons = @Crons,
    Description = @Description,
    Description1=@Description1,
    Activate=@Activate,
    UpdateTime=GETDATE(),
    Expire=@Expire
    WHERE Id = @Id
  </update>
  <get-page-list>
    select * from(
    select *,row_number() over(order by Id desc) uid,
    (
    select count(1) from [TaskTrigger] where 1=1
    <isNotEmpty property="Description" prepend="and">
      Description like '%'+@Description+'%' or Description1 like '%'+@Description1+'%'
    </isNotEmpty>
    )
    total from [TaskTrigger] where 1=1
    <isNotEmpty property="Description" prepend="and">
      Description like '%'+@Description+'%' or Description1 like '%'+@Description1+'%'
    </isNotEmpty>
    ) as tbl
    where uid between (@PageIndex-1)*@PageSize+1 and @PageIndex*@PageSize
  </get-page-list>
  <get-task-triggers>
    select tt.* from [dbo].[TaskTrigger] tt left join [TaskSchedulingTriggerMapping] tst on tt.Id=tst.TriggerId
    where tst.SchedulingId=@schedulingId
  </get-task-triggers>
  <get-types>
    select distinct [type] from [TaskTrigger]
  </get-types>
  <delete>
    delete from [TaskTrigger] where Id in
    <iterate property="Ids" conjunction="," open="(" close=")">
      @Ids[index]
    </iterate>
  </delete>
  <get-by-id>
    select * from TaskTrigger where Id = @Id
  </get-by-id>
  <get-by-ids>
    select * from [TaskTrigger] where Id in 
    <iterate property="ids" conjunction="," open="(" close=")">
      @ids[index]
    </iterate>
  </get-by-ids>
  <get-by-scheduling-id>
    select tt.* from [dbo].[TaskTrigger] tt left join [dbo].[TaskSchedulingTriggerMapping] tstm on tt.Id=tstm.TriggerId
    where tstm.SchedulingId=@schedulingId
  </get-by-scheduling-id>
</sql>