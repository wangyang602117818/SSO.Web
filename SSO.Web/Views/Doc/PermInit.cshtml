
@{
    ViewBag.Title = "权限初始化";
    Layout = "~/Views/Doc/_LayoutPage.cshtml";
}
<h4 class="bd-title mb-3" id="content">权限初始化</h4>
<p class="fw-normal">请确保项目已经配置登录(如何登录请参考 sso登录 节点)</p>
<p class="fw-bold">1. 设置权限项</p>
<p class="fw-normal">给每一个需要控制权限的接口加上 SSOAuthorize 特性,并给出name描述(权限项)</p>
<p class="fw-normal">权限项在同一个项目中可以相同,代表同一种权限</p>
<p class="fw-normal">权限项在不同的项目中必须唯一,否则会影响权限判断(接口已有验证,相同无法提交)</p>
<pre data-language="C#">
<code class="language-cs">
    public class HomeController : Controller
    {
        ...
        <mark>[SSOAuthorize("App01-About")]</mark>
        public ActionResult About()
        {
            return View();
        }
        <mark>[SSOAuthorize("App01-Me")]</mark>
        public ActionResult Me()
        {
            return View();
        }
    }
    </code>
 </pre>
<p class="fw-bold">2. 初始化权限</p>
<p class="fw-normal">获取项目中所有SSOAuthorize中的权限项,并通过接口插入数据库</p>
<p class="fw-normal">WebApplication1.Controllers 是Controllers的程序集名称,需要修改成自己的</p>
<p class="fw-normal">app01 是权限分类的名称,不同的项目具有不同的名称</p>
<p class="fw-normal">ReplacePermissions方法可以重复使用,当有权限变动时调用该方法</p>
<pre data-language="C#">
<code class="language-cs">
    public class HomeController : Controller
    {
        string ssoBaseUrl = AppSettings.GetValue("ssoBaseUrl");  //从配置文件获取服务器的基本地址
        public ActionResult Index()
        {
            var assembly = Assembly.GetExecutingAssembly();
            //获取所有WebApplication1.Controllers程序集下的controllers列表
            var controllers = assembly.GetTypes().Where(w => w.FullName.Contains(<mark>"WebApplication1.Controllers"</mark>));
            //获取所有权限项描述
            var res = SSOAuthorizeAttribute.GetPermissionDescription(controllers);
            SSOClientService sSOClientService = new SSOClientService(ssoBaseUrl, JwtManager.GetAuthorization());
            //初始化权限
            var result = sSOClientService.ReplacePermissions(<mark>"app01"</mark>, res);
            return Json(result,JsonRequestBehavior.AllowGet);
        }
        ...
    }
    </code>
 </pre>
