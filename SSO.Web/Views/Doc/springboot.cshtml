@using SSO.Util.Client
@{
    ViewBag.Title = "配置单点登录-SpringBoot";
    Layout = "~/Views/Doc/_LayoutPage.cshtml";
}
<h4 class="bd-title mb-3" id="content">配置单点登录(SpringBoot)</h4>
<p class="fw-bold">1. 创建新项目</p>
<div class="row">
    <div class="col-5 p-2" style="background-color: #f5f5f5">
        <p class="fw-normal">1) 使用Eclipse或其他IDE创建Maven Project,并且修改JavaSE为1.6版本以上</p>
        <p class="fw-normal">2) 下载 <a href="~/Content/sso.util.client.zip"> sso.util.client.zip </a> 解压并添加到项目中,解压出来的根路径为sso</p>
        <p class="fw-normal">3) 添加以下pom依赖(版本号可以不一致)</p>
        <pre class="line-numbers" data-language="Html">
        <code class="language-markup">
                &lt;dependency>
                    &lt;groupId>org.springframework.boot&lt;/groupId>
                    &lt;artifactId>spring-boot-starter-web&lt;/artifactId>
                    &lt;version>2.5.0&lt;/version>
                &lt;/dependency>
                &lt;dependency>
                    &lt;groupId>com.auth0&lt;/groupId>
                    &lt;artifactId>java-jwt&lt;/artifactId>
                    &lt;version>4.0.0&lt;/version>
                &lt;/dependency>
            </code>
        </pre>
        <p class="fw-normal">4) 设置好启动类,确保项目可以正常运行</p>
    </div>
    <div class="col">
        <img src="~/Content/images/springboot-1.gif" style="width:100%" />
    </div>
</div>
<p class="fw-bold mt-4">2. 配置项目</p>
<p class="fw-normal">1) 在 application.properties 中配置以下节点</p>
<pre class="line-numbers" data-language="Properties">
<code class="language-properties">
        #sso地址,用于 跳转 和 验证role权限
        ssoUrl = http://api.ssoutil.cn
        #jwt token的解密秘钥
        ssoSecret = tvO3zPS9Fdc4EvF867Vjbc8ox0kRaH5DCihwOzYMbLQ=
        #cookie保存的名称
        ssoCookieKey = sso.java.springboot
        #cookie保存的时间(分钟)
        ssoCookieTime = session
    </code>
</pre>
<p class="fw-normal">2) 添加全局拦截器</p>
<pre class="line-numbers" data-language="Java">
<code class="language-java">
        @@Configuration
        public class ApplicationInterceptor implements WebMvcConfigurer{
            @@Override
            public void addInterceptors(InterceptorRegistry registry) {
                registry.addInterceptor(new SSOAuthorizeInterceptor());
            }
        }
    </code>
</pre>
<p class="fw-normal">3) 添加完拦截器之后,项目中所有的接口都需要登录验证,匿名验证请使用@AllowAnonymous特性</p>
<p class="col pe-0">
    <img src="~/Content/images/springboot-2.gif" />
</p>
<p class="fw-normal">4) 验证失败不跳转</p>
<p class="fw-light">现实情况中API项目往往不需要跳转到登录界面,只需返回验证失败即可,该种情况请使用 SSOAuthorizeInterceptor 拦截器的 unAuthorizedRedirect 属性</p>
<p class="fw-light">把 registry.addInterceptor(new SSOAuthorizeInterceptor()); 改成 registry.addInterceptor(new SSOAuthorizeInterceptor(false));</p>
<p class="fw-bold mt-4">3. 登录成功之后</p>
<p class="fw-normal">可以在Action中获取用户基本信息</p>
<p class="fw-normal">可以在调试工具中查看cookie的键和值,键是sso.java.springboot,值是jwt token,过期时间和session同步</p>
<div class="row">
    <div class="col" style="background-color: #f5f5f5">
        <pre class="line-numbers" data-language="Java">
        <code class="language-java">
                @@GetMapping(value = "/")
                public UserData Index(HttpServletRequest request) {
                    //获取用户基本信息
                    UserData userData = (UserData) request.getAttribute("userData");
                    //获取authorization(jwt token)
                    String authorization = JwtManager.GetAuthorization(request);
                    return userData;
                }
            </code>
     </pre>
    </div>
</div>
<p class="fw-bold mt-4">4. SSO退出</p>
<p class="fw-normal">在当前项目中放入以下链接或者用js的方式跳到该链接</p>
<pre class="line-numbers" data-language="Html">
<code class="language-markup">
        &lt;!--{baseUrl}为当前项目的基本地址-->
        &lt;a href="@AppSettings.GetApplicationUrl(Request)sso/logout?returnUrl={baseUrl}">sso退出&lt;/a>
    </code>
</pre>
<p class="fw-bold mt-4">5. 通过 userId 或者 authorization 获取系统的其他信息</p>
<pre class="line-numbers" data-language="Java">
<code class="language-java">
        //初始化SSOClientService类(请在Action中初始化)
        SSOClientService clientService = new SSOClientService(authorization);
    </code>
</pre>
<p class="fw-normal">1. 获取所有公司列表</p>
<pre class="line-numbers" data-language="C#">
<code class="language-cs">
        var list = clientService.GetAllCompany();
    </code>
</pre>