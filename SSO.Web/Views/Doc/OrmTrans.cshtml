
@{
    ViewBag.Title = "事务处理";
    Layout = "~/Views/Doc/_LayoutPage.cshtml";
}
<h4 class="bd-title mb-3" id="content">事务处理</h4>
<p class="fw-bold">1. 简单事务处理</p>
<p class="fw-normal">以下案例先删除指定Code的记录,在重新添加记录,2条语句之间没有数据交互</p>
<p class="fw-light">company.xml</p>
<pre data-language="xml">
<code class="language-xml">
        ...
&lt;insert>
    INSERT INTO Company (
    Code,
    Name,
    CreateTime
    &lt;isNotNull property="Order" prepend=",">
        [Order]
    &lt;/isNotNull>
    &lt;isNotEmpty property="Description" prepend=",">
        Description
    &lt;/isNotEmpty>
    ) VALUES (
    @@Code,
    @@Name,
    @@CreateTime
    &lt;isNotNull property="Order" prepend=",">
        @@Order
    &lt;/isNotNull>
    &lt;isNotEmpty property="Description" prepend=",">
        @@Description
    &lt;/isNotEmpty>
    )
&lt;/insert>
&lt;delete>
    delete from company where Code=@@Code
&lt;/delete>
    </code>
</pre>
<p class="fw-light">Company.cs</p>
<pre data-language="C#">
<code class="language-cs">
        public class Company: ModelBase
        {
            ...
            public int DeleteAndInsert(IEnumerable&lt;object> paras)
            {
                var nodes = new List&lt;string>() { "delete", "insert" };
                return base.ExecuteTransaction(nodes, paras);
            }
        }
    </code>
 </pre>
<p class="fw-light">事务操作</p>
<pre data-language="C#">
<code class="language-cs">
        var para = new List&lt;object>()
        {
            new {Code="com05"},  //第一个语句的参数
            new {Code="com05",Name="name05",Description="desc05",CreateTime=DateTime.Now,Order=1}  //第二个语句的参数
        };
        var count = company.DeleteAndInsert(para);  //返回最后一个语句受影响的行数
    </code>
 </pre>
<p class="fw-bold">2. 在sql语句中的事务</p>
<p class="fw-normal">待定...</p>

<p class="fw-bold">3. 代码中的事务</p>
<p class="fw-normal">待定...</p>
