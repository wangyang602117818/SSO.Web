
@{
    ViewBag.Title = "事务处理";
    Layout = "~/Views/Doc/_LayoutPage.cshtml";
}
<h4 class="bd-title mb-3" id="content">事务处理</h4>
<p class="fw-bold">1. 简单事务处理</p>
<p class="fw-normal">以下案例先删除指定的记录,在重新添加记录,2条语句之间没有数据交互</p>
<p class="fw-light">company.xml</p>
<pre data-language="xml">
<code class="language-xml">
        ...
&lt;insert>
    INSERT INTO Company (
    Code,
    Name,
    CreateTime
    &lt;isNotNull property="Order" prepend=",">
        [Order]
    &lt;/isNotNull>
    &lt;isNotEmpty property="Description" prepend=",">
        Description
    &lt;/isNotEmpty>
    ) VALUES (
    @@Code,
    @@Name,
    @@CreateTime
    &lt;isNotNull property="Order" prepend=",">
        @@Order
    &lt;/isNotNull>
    &lt;isNotEmpty property="Description" prepend=",">
        @@Description
    &lt;/isNotEmpty>
    )
&lt;/insert>
&lt;delete>
    delete from company where Code=@@Code
&lt;/delete>
    </code>
</pre>
<p class="fw-light">Company.cs</p>
<pre data-language="C#">
<code class="language-cs">
        public class Company: ModelBase
        {
            ...
            public int DeleteAndInsert(IEnumerable&lt;object> paras)
            {
                var nodes = new List&lt;string>() { "delete", "insert" };
                return base.ExecuteTransaction(nodes, paras);
            }
        }
    </code>
 </pre>
<p class="fw-light">2. 操作</p>
<pre data-language="C#">
<code class="language-cs">
        var para = new List&lt;object>()
        {
            new {Code="com05"},  //第一个语句的参数
            new {Code="com05",Name="name05",Description="desc05",CreateTime=DateTime.Now,Order=1}  //第二个语句的参数
        };
        var count = company.DeleteAndInsert(para);  //返回最后一个语句受影响的行数
    </code>
 </pre>
<p class="fw-bold">2. 复杂事务处理</p>
<p class="fw-normal">以下案例先插入一条记录,拿到返回值后作为第二条插入语句的输入,2条语句之间进行了数据交互</p>
<p class="fw-light">company.xml</p>
<pre data-language="xml">
<code class="language-xml">
        ...
&lt;insert>
    INSERT INTO Company (
    Code,
    Name,
    CreateTime
    &lt;isNotNull property="Order" prepend=",">
        [Order]
    &lt;/isNotNull>
    &lt;isNotEmpty property="Description" prepend=",">
        Description
    &lt;/isNotEmpty>
    ) VALUES (
    @@Code,
    @@Name,
    @@CreateTime
    &lt;isNotNull property="Order" prepend=",">
        @@Order
    &lt;/isNotNull>
    &lt;isNotEmpty property="Description" prepend=",">
        @@Description
    &lt;/isNotEmpty>
    )
&lt;/insert>
    </code>
</pre>
<p class="fw-light">Company.cs</p>
<pre data-language="C#">
<code class="language-cs">
        public class Company: ModelBase
        {
            ...
            public bool InsertRelation(Company com1, Company com2)
            {
                try
                {
                    //开启事务
                    session.BeginTransaction();
                    //插入记录,返回主键id
                    var id = InsertIdentity(com1);
                    //主键id作为第二条语句的输入
                    com2.Order = id;
                    var result = Insert(com2);
                    //提交事务
                    session.CommitTransaction();
                    return true;
                }
                catch
                {
                    //回滚事务
                    session.RollBackTransaction();
                    return false;
                }
            }
        }
    </code>
 </pre>
<p class="fw-bold">3. sql代码中的事务</p>
<p class="fw-normal">以下案例与案例2的逻辑一致,是在sql语句中实现的</p>
<p class="fw-light">company.xml</p>
<pre data-language="xml">
<code class="language-xml">
...
&lt;insert-relation>
    declare @@id int  --主键id
    declare @@errorMsg NVARCHAR(MAX);  --错误消息
    begin tran
    begin try
        insert into company(Code,Name,[Order],CreateTime
            &lt;isNotEmpty property="com1.Description" prepend=",">
                Description
            &lt;/isNotEmpty>
            )values(
            @@com1.Code,
            @@com1.Name,
            @@com1.Order,
            @@com1.CreateTime
            &lt;isNotEmpty property="com1.Description" prepend=",">
                @@com1.Description
            &lt;/isNotEmpty>
        )
        select @@id= SCOPE_IDENTITY()
        insert into company(Code,Name,[Order],CreateTime
            &lt;isNotEmpty property="com2.Description" prepend=",">
                Description
            &lt;/isNotEmpty>
            )values(
            @@com2.Code,
            @@com2.Name,
            @@id,
            @@com2.CreateTime
            &lt;isNotEmpty property="com2.Description" prepend=",">
                @@com2.Description
            &lt;/isNotEmpty>
        )
        commit
    end try
    begin catch
        rollback
        SELECT  @@errorMsg = ERROR_MESSAGE();
        RAISERROR(@@errorMsg,16,1);   --抛出异常
    end catch
&lt;/insert-relation>
    </code>
</pre>
<p class="fw-light">Company.cs</p>
<pre data-language="C#">
<code class="language-cs">
        public class Company: ModelBase
        {
            ...
            public int InsertRelation(Company com1, Company com2)
            {
                return base.ExecuteNonQuery("insert-relation", new { com1, com2 });
            }
        }
    </code>
 </pre>
