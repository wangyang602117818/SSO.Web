<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SSO.Util.Client</name>
    </assembly>
    <members>
        <member name="T:SSO.Util.Client.AppSettings">
            <summary>
            系统设置类
            </summary>
        </member>
        <member name="F:SSO.Util.Client.AppSettings.DateTimeFormat">
            <summary>
            yyyy-MM-dd HH:mm:ss
            </summary>
        </member>
        <member name="M:SSO.Util.Client.AppSettings.GetValue(System.String)">
            <summary>
            获取配置文件
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.AppSettings.GetApplicationUrl(System.Web.HttpRequestBase)">
            <summary>
            获取应用程序的根路径
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.AppSettings.GetAbsoluteUri(System.Web.HttpRequestBase)">
            <summary>
            获取当前请求的完整路径
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.AsymmetricEncryptHelper">
            <summary>
            非对称加密算法
            </summary>
        </member>
        <member name="M:SSO.Util.Client.AsymmetricEncryptHelper.RSAEncode(System.String,System.String)">
            <summary>
            RSA加密
            </summary>
            <param name="sourceString">需要加密的字符串</param>
            <param name="pubKey">base64形式的key</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.AsymmetricEncryptHelper.RSADecode(System.String,System.String)">
            <summary>
            RSA解密，私钥分成2种格式 pkcs1 pkcs8 ，.net只支持pkcs1,java是pkcs8格式
            </summary>
            <param name="secretString">加密以后的字符串</param>
            <param name="priKey"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.AsymmetricEncryptHelper.ParseFromPemPublicKey(System.String)">
            <summary>          
            将pem格式公钥转换为RSAParameters         
            </summary> <param name="pemPubKey">pem公钥内容</param>         
            <returns>转换得到的RSAParamenters</returns>          
        </member>
        <member name="M:SSO.Util.Client.AsymmetricEncryptHelper.ParseFromPemPrivateKey(System.String)">
            <summary>          
            将pem格式私钥转换为RSAParameters,仅支持pkcs1        
            </summary>          
            <param name="pemPriKey">pem私钥内容</param>        
            <returns>转换得到的RSAParamenters</returns>         
        </member>
        <member name="M:SSO.Util.Client.AsymmetricEncryptHelper.ConverToPkcs1(System.String)">
            <summary>
            pkcs8转pkcs1
            </summary>
            <param name="pkcs8str"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.Base64SecureURL">
            <summary>
            base64编码解码类
            </summary>
        </member>
        <member name="M:SSO.Util.Client.Base64SecureURL.Encode(System.String)">
            <summary>
            字符串编码
            </summary>
            <param name="text">待编码的文本字符串</param>
            <returns>编码的文本字符串.</returns>
        </member>
        <member name="M:SSO.Util.Client.Base64SecureURL.Decode(System.String)">
            <summary>
            解码安全的URL文本字符串的Base64
            </summary>
            <param name="secureUrlBase64">Base64编码字符串安全的URL.</param>
            <returns>Cadena de texto decodificada.</returns>
        </member>
        <member name="T:SSO.Util.Client.DateTimeExtention">
            <summary>
            时间扩展类
            </summary>
        </member>
        <member name="M:SSO.Util.Client.DateTimeExtention.UTCTimeStamp(System.DateTime)">
            <summary>
            获取DateTime时间的时间戳
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.DateTimeExtention.UTCMillisecondTimeStamp(System.DateTime)">
            <summary>
            获取DateTime时间的毫秒时间戳
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.DateTimeExtention.MilliTimeStampToDateTime(System.String)">
            <summary>
            毫秒时间戳转DateTime,如果是TUC时间则需要调用 .ToLocalTime() 转成当地时间
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.DownloadFileItem">
            <summary>
            下载文件的描述
            </summary>
        </member>
        <member name="P:SSO.Util.Client.DownloadFileItem.FileName">
            <summary>
            文件描述
            </summary>
        </member>
        <member name="P:SSO.Util.Client.DownloadFileItem.ContentType">
            <summary>
            ContentType类型
            </summary>
        </member>
        <member name="P:SSO.Util.Client.DownloadFileItem.ContentLength">
            <summary>
            Content长度
            </summary>
        </member>
        <member name="P:SSO.Util.Client.DownloadFileItem.FileStream">
            <summary>
            文件流
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.redirect">
            <summary>
            重定向
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.record_not_exist">
            <summary>
            不存在
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.requests_has_been_exceeded">
            <summary>
            请求已经超过次数
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.record_exist">
            <summary>
            已存在
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.authorize_fault">
            <summary>
            权限不足
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.task_not_complete">
            <summary>
            任务未完成
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.baseUrl_not_config">
            <summary>
            配置文件缺失
            </summary>
        </member>
        <member name="F:SSO.Util.Client.ErrorCode.server_exception">
            <summary>
            未知错误
            </summary>
        </member>
        <member name="T:SSO.Util.Client.FileClientService">
            <summary>
            文件服务类
            </summary>
        </member>
        <member name="P:SSO.Util.Client.FileClientService.RemoteUrl">
            <summary>
            文件服务器的url
            </summary>
        </member>
        <member name="P:SSO.Util.Client.FileClientService.Token">
            <summary>
            jwt token
            </summary>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.#ctor(System.String,System.String)">
            <summary>
            文件服务器的url
            </summary>
            <param name="remoteUrl"></param>
            <param name="token"></param>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.Upload(System.String,System.String,System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            上传文件
            </summary>
            <param name="fileName">文件名称</param>
            <param name="contentType">文件contentType</param>
            <param name="stream">文件流</param>
            <param name="param">其他参数</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.Uploads(System.Collections.Generic.IEnumerable{SSO.Util.Client.UploadFileItem},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            上传多个文件
            </summary>
            <param name="files"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.DownloadFile(System.String,System.String,System.String)">
            <summary>
            下载文件
            </summary>
            <param name="id">文件id</param>
            <param name="filename">文件名称</param>
            <param name="flag">文件flag,图片才需要</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.DownloadFileIcon(System.String,System.String)">
            <summary>
            下载文件图标
            </summary>
            <param name="id">文件id</param>
            <param name="filename">文件名称</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.FileState(System.String)">
            <summary>
            获取文件转换进度
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.GetFileList(System.Int32,System.Int32,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Collections.Generic.Dictionary{System.String,System.String},System.Boolean)">
            <summary>
            获取文件列表
            </summary>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <param name="from"></param>
            <param name="filter"></param>
            <param name="fileType"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="sorts"></param>
            <param name="delete"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.GetFromList">
            <summary>
            获取from列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.FileClientService.GetExtensionMap">
            <summary>
            获取ExtensionMap
            </summary>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.FileItem">
            <summary>
            文件类
            </summary>
        </member>
        <member name="T:SSO.Util.Client.UploadFileItem">
            <summary>
            上传文件类
            </summary>
        </member>
        <member name="P:SSO.Util.Client.UploadFileItem.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:SSO.Util.Client.UploadFileItem.ContentType">
            <summary>
            ContentType
            </summary>
        </member>
        <member name="P:SSO.Util.Client.UploadFileItem.FileStream">
            <summary>
            文件流
            </summary>
        </member>
        <member name="T:SSO.Util.Client.HashEncryptHelper">
            <summary>
            Hash散列算法
            </summary>
        </member>
        <member name="M:SSO.Util.Client.HashEncryptHelper.StringMd5(System.String)">
            <summary>
            字符串md5计算,不可逆，生成32位字符串
            </summary>
            <param name="str">要计算的字符串</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.HashEncryptHelper.FileMd5(System.String)">
            <summary>
            文件MD5计算
            </summary>
            <param name="path">要计算的文件的本地路径</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.HashEncryptHelper.FileMd5(System.IO.Stream)">
            <summary>
            文件MD5计算
            </summary>
            <param name="stream">文件流</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.HashEncryptHelper.StringSHA1(System.String)">
            <summary>
            SHA1加密，不可逆，生成40位字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.HttpRequestHelper">
            <summary>
            http请求类
            </summary>
        </member>
        <member name="M:SSO.Util.Client.HttpRequestHelper.PostFile(System.String,System.Collections.Generic.IEnumerable{SSO.Util.Client.UploadFileItem},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            发送文件
            </summary>
            <param name="url"></param>
            <param name="files"></param>
            <param name="paras"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.HttpRequestHelper.Post(System.String,System.Object,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            post请求
            </summary>
            <param name="url"></param>
            <param name="obj"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.HttpRequestHelper.Get(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            get请求
            </summary>
            <param name="url"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.HttpRequestHelper.GetFile(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            下载文件
            </summary>
            <param name="url"></param>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.ImageExtention">
            <summary>
            图片扩展方法
            </summary>
        </member>
        <member name="M:SSO.Util.Client.ImageExtention.GetImageFormat(System.String)">
            <summary>
            根据后缀判断图片类型
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.ImageExtention.GetContentType(System.Byte[])">
            <summary>
            获取图片的content-type
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.ImageExtention.GetImageType(System.IO.Stream)">
            <summary>
            根据流获取图片类型 result: JPG|TIFF|BMP|GIF|PNG|XML|""
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.ImageExtention.GetImageType(System.Byte[])">
            <summary>
            根据字节获取图片类型 result: JPG|TIFF|BMP|GIF|PNG|XML|""
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.ImageExtention.GetImageTypeFromHeader(System.String)">
            <summary>
            根据header获取图片类型 result: JPG|TIFF|BMP|GIF|PNG|XML|""
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.ImageExtention.GetImageSize(System.IO.Stream)">
            <summary>
            获取Image的宽高
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.ImageExtention.GetImageSize(System.Byte[])">
            <summary>
            获取Image的宽高
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.JsonSerializerHelper">
            <summary>
            json序列化
            </summary>
        </member>
        <member name="M:SSO.Util.Client.JsonSerializerHelper.Serialize(System.Object)">
            <summary>
            序列化对象
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.JsonSerializerHelper.Deserialize``1(System.String)">
            <summary>
            反序列化对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.JwtManager">
            <summary>
            Jwt管理类,使用之前需要在web.config配置 secretKey issuer(颁发者) ticketTime(url上面的票据有效时间,单位秒)
            </summary>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.#ctor(System.String,System.String,System.Int32)">
            <summary>
            生成JwtToken的类
            </summary>
            <param name="secretKey">秘钥</param>
            <param name="issuer">颁发者</param>
            <param name="ticketTime">url上面的ticket过期时间(秒)</param>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.GenerateToken(System.String,System.String,System.String,System.String,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            生成JwtToken类
            </summary>
            <param name="userId"></param>
            <param name="userName"></param>
            <param name="lang"></param>
            <param name="extra"></param>
            <param name="ip"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.ModifyTokenLang(System.String,System.String,System.Int32)">
            <summary>
            改变语言,并且返回新token
            </summary>
            <param name="token"></param>
            <param name="lang"></param>
            <param name="minutes"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.GenerateTicket(System.String)">
            <summary>
            生成url上面的Ticket,一般只有几秒有效期
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.DecodeTicket(System.String)">
            <summary>
            解析url上面的Ticket
            </summary>
            <param name="ticket"></param>
            <returns>用户id,如果过期就返回""</returns>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.GetAuthorization(System.Web.HttpRequestBase,System.String)">
            <summary>
            获取cookie或者请求header中的jwt token
            </summary>
            <param name="request"></param>
            <param name="cookieKey"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.ParseUserData(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            解析出用户信息
            </summary>
            <param name="User"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.ParseUserData(System.String,System.String)">
            <summary>
            根据cookie和key解析用户信息
            </summary>
            <param name="authorization"></param>
            <param name="secretKey"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.JwtManager.ParseAuthorization(System.String,System.String)">
            <summary>
            根据cookie和key解析用户信息
            </summary>
            <param name="authorization"></param>
            <param name="secretKey"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.Log4Net">
            <summary>
            默认log的位置  App_Data\Log\
            </summary>
        </member>
        <member name="M:SSO.Util.Client.Log4Net.ErrorLog(System.Exception)">
            <summary>
            错误日志 
            </summary>
            <param name="ex">异常信息</param>
        </member>
        <member name="M:SSO.Util.Client.Log4Net.ErrorLog(System.String)">
            <summary>
            错误日志 
            </summary>
            <param name="str">异常信息</param>
        </member>
        <member name="M:SSO.Util.Client.Log4Net.InfoLog(System.Exception)">
            <summary>
            文本日志
            </summary>
            <param name="ex"></param>
        </member>
        <member name="M:SSO.Util.Client.Log4Net.InfoLog(System.String)">
            <summary>
            文本日志
            </summary>
            <param name="str"></param>
        </member>
        <member name="T:SSO.Util.Client.LogRecordAttribute">
            <summary>
            过滤器发生在modelbinding之后,所以如果model验证不通过,则不会记录日志
            </summary>
        </member>
        <member name="F:SSO.Util.Client.LogRecordAttribute.RecordQuerystring">
            <summary>
            是否记录querystring
            </summary>
        </member>
        <member name="F:SSO.Util.Client.LogRecordAttribute.RecordContent">
            <summary>
            是否记录请求体
            </summary>
        </member>
        <member name="M:SSO.Util.Client.LogRecordAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>
            日志记录
            </summary>
            <param name="recordQuerystring"></param>
            <param name="recordContent"></param>
        </member>
        <member name="M:SSO.Util.Client.LogRecordAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:SSO.Util.Client.LogRecordAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:SSO.Util.Client.LogRecordAttribute.VerifyConfig(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            验证配置文件
            </summary>
            <param name="filterContext"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.LogService">
            <summary>
            日志服务类
            </summary>
        </member>
        <member name="M:SSO.Util.Client.LogService.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="baseUrl">日志项目的url</param>
        </member>
        <member name="M:SSO.Util.Client.LogService.GetList(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Nullable{System.Boolean},System.Int32,System.Int32)">
            <summary>
            获取日志对象列表
            </summary>
            <param name="from"></param>
            <param name="controller"></param>
            <param name="action"></param>
            <param name="startTime"></param>
            <param name="endTime"></param>
            <param name="userId"></param>
            <param name="userName"></param>
            <param name="sorts"></param>
            <param name="exception"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.LogService.GetById(System.String)">
            <summary>
            通过id获取日志详情
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.LogService.GetOpRecordByDay(System.Int32)">
            <summary>
            获取最新的日志,按天统计
            </summary>
            <param name="last">最近多少天</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.LogService.GetFromList">
            <summary>
            获取from列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.LogService.GetToList">
            <summary>
            获取to列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.LogService.GetControllersByTo(System.String)">
            <summary>
            获取to中Controller列表
            </summary>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.LogService.GetActionsByController(System.String,System.String)">
            <summary>
            获取from中action列表
            </summary>
            <param name="to"></param>
            <param name="controllerName"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.LogService.GetOperations">
            <summary>
            统计昨天,上月,全部日志
            </summary>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.MessageCenterService">
            <summary>
            队列信息中心服务
            </summary>
        </member>
        <member name="M:SSO.Util.Client.MessageCenterService.#ctor(System.String)">
            <summary>
            消息中心
            </summary>
            <param name="baseUrl">消息中心项目的基本url</param>
        </member>
        <member name="M:SSO.Util.Client.MessageCenterService.InsertLog(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int64,System.Boolean)">
            <summary>
            记录日志
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <param name="controller"></param>
            <param name="action"></param>
            <param name="route"></param>
            <param name="querystring"></param>
            <param name="content"></param>
            <param name="userId"></param>
            <param name="userName"></param>
            <param name="userHost"></param>
            <param name="userAgent"></param>
            <param name="time"></param>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.MessageCenterService.InsertConvertTask(System.String,System.String,System.String)">
            <summary>
            添加转换任务
            </summary>
            <param name="machineName">发往那个机器</param>
            <param name="collectionName"></param>
            <param name="collectionId"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.LogModel">
            <summary>
            日志类
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel._id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.From">
            <summary>
            日志来源
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.To">
            <summary>
            日志去向
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.Controller">
            <summary>
            日志访问的Controller
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.Action">
            <summary>
            日志访问的Action
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.Route">
            <summary>
            日志的路由信息
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.QueryString">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.Content">
            <summary>
            请求内容
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.UserId">
            <summary>
            日志关联人
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.UserName">
            <summary>
            日志关联人
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.UserHost">
            <summary>
            用户ip
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.UserAgent">
            <summary>
            用户代理
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.Time">
            <summary>
            响应时间(毫秒)
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.CountPerMinute">
            <summary>
            一分钟请求的次数
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.Exception">
            <summary>
            是否有错误
            </summary>
        </member>
        <member name="P:SSO.Util.Client.LogModel.CreateTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:SSO.Util.Client.MsQueue`1">
            <summary>
            微软messagequeue
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path">FormatName:DIRECT=OS:computename\\private$\\task_queue</param>
            <param name="managerpath"></param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.CreateQueue(System.Boolean)">
            <summary>
            不能操作远程队列,只能由本地的程序创建队列,程序只能对远程的队列发送消息
            创建队列需要消耗较多资源,确保只创建一次
            </summary>
            <param name="transactional">是否是事务队列</param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.SendMessage(`0,System.String,System.Boolean)">
            <summary>
            发送普通消息
            </summary>
            <param name="data">消息体</param>
            <param name="label">消息标签</param>
            <param name="recoverable">消息持久化</param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.SendMessageAck(`0,System.String,System.Boolean)">
            <summary>
            发送需要应答的消息
            </summary>
            <param name="data">消息体</param>
            <param name="label">消息标签</param>
            <param name="recoverable">消息持久化</param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.SendMessageTransactional(`0,System.String,System.Boolean)">
            <summary>
            事务性队列只能发送事务性消息,发送普通消息会丢弃
            </summary>
            <param name="data"></param>
            <param name="label"></param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.ReceiveMessage(System.Action{`0})">
            <summary>
            接收消息
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.ReceiveDeadletterMessage(System.Action{`0})">
            <summary>
            
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.ReceiveMessageAck(System.Func{`0,System.Boolean})">
            <summary>
            
            </summary>
            <param name="func"></param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.ReceiveMessageTransactional(System.Func{`0,System.Boolean})">
            <summary>
            
            </summary>
            <param name="func"></param>
        </member>
        <member name="M:SSO.Util.Client.MsQueue`1.ReceiveAcknowledgment(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="messageId"></param>
            <param name="queuePath"></param>
        </member>
        <member name="T:SSO.Util.Client.MyHandleErrorAttribute">
            <summary>
            错误处理
            </summary>
        </member>
        <member name="M:SSO.Util.Client.MyHandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:SSO.Util.Client.NoneLogRecordAttribute">
            <summary>
            不记录日志
            </summary>
        </member>
        <member name="M:SSO.Util.Client.NoneLogRecordAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:SSO.Util.Client.RandomExtention">
            <summary>
            随机数扩展
            </summary>
        </member>
        <member name="M:SSO.Util.Client.RandomExtention.RandomCode(System.Random,System.Int32)">
            <summary>
            获取随机字符串，
            </summary>
            <param name="random"></param>
            <param name="numb">随机字符串个数</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.RandomExtention.GetRandomCodes(System.Random,System.Int32,System.Int32)">
            <summary>
            获取[0,max]之间的len个不重复随机整数列表
            </summary>
            <param name="random"></param>
            <param name="max"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.RandomExtention.Probability(System.Random,System.Double)">
            <summary>
            概率获取
            </summary>
            <param name="random"></param>
            <param name="percent">0-1</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.RandomExtention.GetRewardIdsDecrease(System.Random,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="random"></param>
            <param name="all"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.RandomExtention.RandomCodeHex(System.Random,System.Int32)">
            <summary>
            随机16精制字符串
            </summary>
            <param name="random"></param>
            <param name="numb">16精制字符串长度</param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.ResponseModel`1">
            <summary>
            Action返回类
            </summary>
            <typeparam name="T">对象,不能为BsonDocument,如果为string,则string必须为json格式</typeparam>
        </member>
        <member name="M:SSO.Util.Client.ResponseModel`1.#ctor(SSO.Util.Client.ErrorCode,`0,System.Int64)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="t"></param>
            <param name="count"></param>
        </member>
        <member name="T:SSO.Util.Client.ServiceModel`1">
            <summary>
            解析Action返回类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:SSO.Util.Client.ServiceModel`1.code">
            <summary>
            返回码
            </summary>
        </member>
        <member name="P:SSO.Util.Client.ServiceModel`1.message">
            <summary>
            返回信息
            </summary>
        </member>
        <member name="P:SSO.Util.Client.ServiceModel`1.result">
            <summary>
            返回内容
            </summary>
        </member>
        <member name="P:SSO.Util.Client.ServiceModel`1.count">
            <summary>
            返回数据的总数
            </summary>
        </member>
        <member name="T:SSO.Util.Client.FileResponse">
            <summary>
            上传文件返回类
            </summary>
        </member>
        <member name="P:SSO.Util.Client.FileResponse.FileId">
            <summary>
            文件id
            </summary>
        </member>
        <member name="P:SSO.Util.Client.FileResponse.FilePath">
            <summary>
            文件路径
            </summary>
        </member>
        <member name="P:SSO.Util.Client.FileResponse.FileName">
            <summary>
            文件名
            </summary>
        </member>
        <member name="P:SSO.Util.Client.FileResponse.FileSize">
            <summary>
            文件字节数(大小)
            </summary>
        </member>
        <member name="P:SSO.Util.Client.FileResponse.Message">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="T:SSO.Util.Client.PermissionDescriptionAttribute">
            <summary>
            权限描述
            </summary>
        </member>
        <member name="F:SSO.Util.Client.PermissionDescriptionAttribute.PermissionName">
            <summary>
            权限的名称
            </summary>
        </member>
        <member name="M:SSO.Util.Client.PermissionDescriptionAttribute.#ctor(System.String)">
            <summary>
            权限描述
            </summary>
            <param name="permissionName">权限名称</param>
        </member>
        <member name="M:SSO.Util.Client.PermissionDescriptionAttribute.GetPermissionDescription(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            获取程序集所有带有 PermissionDescriptionAttribute 的方法
            </summary>
            <param name="types"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.SSOAuthorizeAttribute">
            <summary>
            sso验证
            </summary>
        </member>
        <member name="M:SSO.Util.Client.SSOAuthorizeAttribute.#ctor(System.Boolean)">
            <summary>
            验证不通过是否跳转到sso登录页面
            </summary>
            <param name="unAuthorizedRedirect">验证不通过是否跳转到sso登录页面</param>
        </member>
        <member name="M:SSO.Util.Client.SSOAuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:SSO.Util.Client.SSOAuthorizeAttribute.GetTokenByTicket(System.String,System.String,System.String)">
            <summary>
            根据url上面的ticket获取token
            </summary>
            <param name="from"></param>
            <param name="ticket"></param>
            <param name="audience"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SSOAuthorizeAttribute.GetRoles(System.String)">
            <summary>
            根据token获取roles列表
            </summary>
            <param name="authorization"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SSOAuthorizeAttribute.VerifyConfig(System.Web.Mvc.AuthorizationContext)">
            <summary>
            验证配置文件
            </summary>
            <param name="filterContext"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.SSOClientService">
            <summary>
            sso服务类
            </summary>
        </member>
        <member name="P:SSO.Util.Client.SSOClientService.RemoteUrl">
            <summary>
            sso服务的url
            </summary>
        </member>
        <member name="P:SSO.Util.Client.SSOClientService.Token">
            <summary>
            jwt token
            </summary>
        </member>
        <member name="F:SSO.Util.Client.SSOClientService.headers">
            <summary>
            请求header
            </summary>
        </member>
        <member name="M:SSO.Util.Client.SSOClientService.#ctor(System.String,System.String)">
            <summary>
            sso服务的url
            </summary>
            <param name="remoteUrl"></param>
            <param name="token"></param>
        </member>
        <member name="M:SSO.Util.Client.SSOClientService.GetAllCompany">
            <summary>
            获取所有company
            </summary>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SSOClientService.GetAllDepartment(System.String)">
            <summary>
            获取指定department列表
            </summary>
            <param name="companyCode"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SSOClientService.GetUserList(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获取user列表
            </summary>
            <param name="filter"></param>
            <param name="companyCode"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SSOClientService.GetRoleList(System.String,System.Int32,System.Int32)">
            <summary>
            获取角色列表
            </summary>
            <param name="filter"></param>
            <param name="pageIndex"></param>
            <param name="pageSize"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SSOClientService.GetUserDetail(System.String)">
            <summary>
            获取user详情
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SSOClientService.ReplacePermissions(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            替换权限项
            </summary>
            <param name="origin">项目标记</param>
            <param name="names">权限列表</param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.CompanyItem">
            <summary>
            Company类
            </summary>
        </member>
        <member name="T:SSO.Util.Client.DepartmentItem">
            <summary>
            department类
            </summary>
        </member>
        <member name="T:SSO.Util.Client.UserItem">
            <summary>
            User列表类
            </summary>
        </member>
        <member name="T:SSO.Util.Client.UserDetail">
            <summary>
            用户详情类
            </summary>
        </member>
        <member name="T:SSO.Util.Client.RoleItem">
            <summary>
            角色列表项
            </summary>
        </member>
        <member name="T:SSO.Util.Client.StreamExtention">
            <summary>
            流扩展
            </summary>
        </member>
        <member name="M:SSO.Util.Client.StreamExtention.GetMD5(System.IO.Stream)">
            <summary>
            获取文件的MD5码
            </summary>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StreamExtention.GetMD5(System.Byte[])">
            <summary>
            获取字节的md5码
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StreamExtention.GetSha256(System.IO.Stream)">
            <summary>
            获取流的sha56
            </summary>
            <param name="fileStream"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.StringExtention">
            <summary>
            字符串扩展类
            </summary>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.ToMD5(System.String)">
            <summary>
            字符串转md5
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.GetSha256(System.String)">
            <summary>
            字符串转sha256
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.ToStr(System.IO.Stream)">
            <summary>
            文件流转字符串
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.ToStream(System.String)">
            <summary>
            字符串转文件流
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.ToBytes(System.IO.Stream)">
            <summary>
            文件流转字节数组
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.GetMachineName(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.RemoveHtml(System.String)">
            <summary>
            移除字符串中的html标签
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.StrToBuffer(System.String)">
            <summary>
            字符串转UTF8字节数组
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.Base64StrToBuffer(System.String)">
            <summary>
            base64字符串转UTF8字节数组
            </summary>
            <param name="base64Str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.GetFileName(System.String)">
            <summary>
            获取路径中的文件名
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.GetFileExt(System.String)">
            <summary>
            获取文件的扩展名
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.IsNullOrEmpty(System.String)">
            <summary>
            IsNullOrEmpty封装
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.FormatMonth(System.Int32)">
            <summary>
            格式化成2位的日期
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.StrToBase64(System.String)">
            <summary>
            string 转成 url 安全的base64 编码
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.Base64ToStr(System.String)">
            <summary>
            url 安全的base64 编码 转 string
            </summary>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.ReplaceJsonString(System.String)">
            <summary>
            替换由 ToJson() 转换的json字符串 中 ObjectId("") 和 ISODate("2020-05-30T08:50:10.048Z") 
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.ReplaceStrictJsonString(System.String)">
            <summary>
            替换由 .ToJson(new JsonWriterSettings() { OutputMode = JsonOutputMode.Strict }) 转换的json字符串 中{"$date": ""} 和{"$oid": ""}
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.StringExtention.ReplaceHttpPrefix(System.String)">
            <summary>
            替换 http://www. 或者 https://www. 或者 www. 为""
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:SSO.Util.Client.SymmetricEncryptHelper">
            <summary>
            对称加密算法
            </summary>
        </member>
        <member name="M:SSO.Util.Client.SymmetricEncryptHelper.AesEncode(System.String,System.String,System.Boolean)">
            <summary>
            Aes加密算法，替代des
            </summary>
            <param name="sourceString">待加密字符串</param>
            <param name="key">base64形式的key,256位。如果为明文字符串则长度只能是：16/24/32</param>
            <param name="isBase64Key">是否是base64形式的key</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SymmetricEncryptHelper.AesEncode(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Aes加密算法，替代des
            </summary>
            <param name="sourceStream"></param>
            <param name="key"></param>
            <param name="isBase64Key"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SymmetricEncryptHelper.AesDecode(System.String,System.String,System.Boolean)">
            <summary>
            Aes解密算法
            </summary>
            <param name="secretString">密文</param>
            <param name="key">base64形式的key，256位</param>
            <param name="isBase64Key">是否是base64形式的key</param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SymmetricEncryptHelper.AesDecode(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Aes解密算法
            </summary>
            <param name="sourceStream"></param>
            <param name="key"></param>
            <param name="isBase64Key"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SymmetricEncryptHelper.DESEncode(System.String,System.String)">
            <summary>
            DES加密，8个长度的字符串秘钥（64位，其中第8、16、24、32、40、48、56、64位是校验位）,校验位不参与密码计算
            所以可能会出现，不同的key加密出来的字符串是一样的，不同的key可以解密相同的字符串
            </summary>
            <param name="sourceString"></param>
            <param name="key">字符串长度为8的key</param>
            <returns>返回base64编码的密文</returns>
        </member>
        <member name="M:SSO.Util.Client.SymmetricEncryptHelper.DESDecode(System.String,System.String)">
            <summary>
            DES解密
            </summary>
            <param name="secretString">base64加密字符串</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SSO.Util.Client.SymmetricEncryptHelper.TripleDESEncode(System.String,System.String)">
            <summary>
            3DES加密，为DES向AES过度的版本
            </summary>
            <param name="sourceString">要加密的字符串</param>
            <param name="key">base64形式的key</param>
            <returns>返回base64编码的密文</returns>
        </member>
        <member name="M:SSO.Util.Client.SymmetricEncryptHelper.TripleDESDecode(System.String,System.String)">
            <summary>
            3DES解密
            </summary>
            <param name="secretString">密文</param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:SSO.Util.Client.SymmetricEncryptHelper.GenerateDESKey">
            <summary>
            生成DES加密密钥
            </summary>
            <returns></returns>
        </member>
        <member name="P:SSO.Util.Client.SymmetricEncryptHelper.GenerateTripleDESKey">
            <summary>
            生成TripleDES加密密钥
            </summary>
        </member>
        <member name="P:SSO.Util.Client.SymmetricEncryptHelper.GenerateAESKey">
            <summary>
            生成256位的AES加密密钥
            </summary>
        </member>
        <member name="T:SSO.Util.Client.ThrottlingAttribute">
            <summary>
            流量过滤特性类
            </summary>
        </member>
        <member name="M:SSO.Util.Client.ThrottlingAttribute.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="maxRequests">最大请求数</param>
            <param name="minuts">分钟</param>
        </member>
        <member name="M:SSO.Util.Client.ThrottlingAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:SSO.Util.Client.ValidateModelStateAttribute">
            <summary>
            model类验证过滤器
            </summary>
        </member>
        <member name="M:SSO.Util.Client.ValidateModelStateAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            检测ModelState,对mvc框架自动Model验证以后的结果进行分析
            </summary>
            <param name="actionContext"></param>
        </member>
    </members>
</doc>
